'####################################
# Database
####################################
database.driverClassName=com.mysql.jdbc.Driver
database.url=jdbc:mysql://localhost/integration
database.userName=
database.password=
database.schemaNames=integration
database.dialect=mysql

#org.dbunit.database.DefaultMetadataHandler=org.dbunit.ext.mysql.MySqlMetadataHandler
org.dbunit.database.IMetadataHandler.implClassName=org.dbunit.ext.mysql.MySqlMetadataHandler

#Because the database setup locally, then we make rest calls.  The transaction dbunit uses for setting up 
#the database must be flushed before making the rest calls.  The easiest solution is to disable transation for
#dbunit when setting up the database
DatabaseModule.Transactional.value.default=disabled

####################################
# DBMaintainer
####################################


# The DBMaintainer can automatically maintain each developer's individual
# database schema. It will check whether database structure updates are
# available and apply them if necessary.
# 
# The database maintainer is disabled by default.
#updateDataBaseSchema.enabled=true
#dbMaintainer.script.locations=sql

# If desired, you can make unitils create the DBMAINTAIN_SCRIPTS table
# automatically by setting following property to true.
dbMaintainer.autoCreateExecutedScriptsTable=true

# After updating the database structure, the database maintainer will also
# generate a number of xml schema definitions (XSD) that describe the structure
# of the database. These XSDs can help you to write datasets more quickly.
# Modern IDEs offer you code-completion and give errors when e.g. a column name
# is incorrectly spelled in one of your dataset files.
dataSetStructureGenerator.xsd.dirName=target/xsd

####################################
# Hibernate
####################################

# Under the hoods, hibernate uses an instance of org.hibernate.cfg.Configuration
# or org.hibernate.cfg.AnnotationConfiguration for loading configuration files
# and registering mapped classes, depending on whether you're using hibernate the
# classic way or whether you use hibernate with annotation. By default, Unitils
# uses org.hibernate.cfg.AnnotationConfiguration. If you're using mapping files
# only and you don't have the hibernate annotations extension in your classpath,
# you can change this by enabling following property.
#HibernateModule.configuration.implClassName=org.hibernate.cfg.Configuration




